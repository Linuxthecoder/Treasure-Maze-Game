// Treasure Maze Adventure - Text-based C++ Game
#include <iostream>
#include <vector>
#include <map>
#include <ctime>
#include <cstdlib>
#include <string>
#include <algorithm>
using namespace std;

class Room {
public:
    string description;
    bool hasTreasure;
    bool hasTrap;
    bool visited;

    Room() {
        description = "An empty, dark room.";
        hasTreasure = false;
        hasTrap = false;
        visited = false;
    }
};

class Player {
public:
    int x, y;
    int health;
    int score;

    Player() {
        x = 0;
        y = 0;
        health = 100;
        score = 0;
    }
};

class Maze {
public:
    int width, height;
    vector<vector<Room>> grid;

    Maze(int w, int h) : width(w), height(h) {
        grid.resize(height, vector<Room>(width));
        generateMaze();
    }

    void generateMaze() {
        srand(time(0));
        for (int i = 0; i < height; ++i) {
            for (int j = 0; j < width; ++j) {
                int r = rand() % 100;
                if (r < 15) {
                    grid[i][j].hasTreasure = true;
                    grid[i][j].description = "You see a shiny treasure chest!";
                } else if (r < 30) {
                    grid[i][j].hasTrap = true;
                    grid[i][j].description = "You hear something strange... It's a trap!";
                }
            }
        }
    }

    bool isValid(int x, int y) {
        return x >= 0 && y >= 0 && x < width && y < height;
    }
};

class Game {
private:
    Player player;
    Maze maze;
    bool gameOver;

public:
    Game(int w, int h) : maze(w, h), gameOver(false) {}

    void play() {
        cout << "\nWelcome to Treasure Maze Adventure!" << endl;
        while (!gameOver) {
            displayRoom();
            if (player.health <= 0) {
                cout << "You have perished in the maze. Game Over!" << endl;
                break;
            }
            movePlayer();
        }
    }

    void displayRoom() {
        Room &room = maze.grid[player.y][player.x];
        if (!room.visited) {
            cout << "\n" << room.description << endl;
            if (room.hasTreasure) {
                cout << "You collect the treasure! (+50 score)\n";
                player.score += 50;
                room.hasTreasure = false;
            } else if (room.hasTrap) {
                cout << "A trap hits you! (-20 health)\n";
                player.health -= 20;
                room.hasTrap = false;
            }
            room.visited = true;
        } else {
            cout << "\nYou've been here before." << endl;
        }
        cout << "Health: " << player.health << " | Score: " << player.score << endl;
    }

    void movePlayer() {
        string dir;
        cout << "\nMove (north/south/east/west): ";
        cin >> dir;
        int dx = 0, dy = 0;

        if (dir == "north") dy = -1;
        else if (dir == "south") dy = 1;
        else if (dir == "east") dx = 1;
        else if (dir == "west") dx = -1;
        else {
            cout << "Invalid direction!" << endl;
            return;
        }

        int newX = player.x + dx;
        int newY = player.y + dy;
        if (maze.isValid(newX, newY)) {
            player.x = newX;
            player.y = newY;
        } else {
            cout << "You can't move there!" << endl;
        }
    }
};

int main() {
    Game game(5, 5); // 5x5 maze
    game.play();
    return 0;
}
